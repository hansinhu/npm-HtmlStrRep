!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.HtmlStrReplace=e():t.HtmlStrReplace=e()}(window,function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(n,i,function(e){return t[e]}.bind(null,i));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";r.r(e),e.default=function(){this.endObj={tag:"",children:[],nextStr:null},this.originStr="",this.sFrom="",this.sTo="",this.startRep=function(t,e,r=""){return this.originStr=t,this.sFrom=e,this.sTo=r,-1!==t.indexOf(e)&&e?(this.endObj=this.strToObj(t),this.reGroup(this.endObj,r)):t},this.reGroup=function(t,e){let r="";if(t.tag){let n=[];t.children.forEach(t=>{n.push(this.reGroup(t,e))}),r+=n.join(t.tag)}else r+=this.replace(t.nextStr);return r},this.replace=function(t){return t.split(this.sFrom).join(this.sTo)},this.strToObj=function(t){let e={tag:"",children:[],nextStr:null},r=this.deleHave(this.machTag(t));if(r){let n=r[0];e.tag=n,e.nextStr="";let i=t.split(n);i.forEach((t,r)=>{e.children.push({tag:"",children:[],nextStr:i[r]}),t&&this.deleHave(this.machTag(t))&&(e.children[r]=this.strToObj(t))})}else e.nextStr=t;return e},this.machTag=function(t){return t.match(/<[^>]+>/g)},this.deleHave=function(t){if(!t)return t;let e=[];for(let r of t)-1===e.indexOf(r)&&e.push(r);return e}}}])});